def insertion_sort(array): #создаем функцию сортировки вставками по возрастанию
    n = len(array) #Переменная n принимает значение размера массива
    for i in range(1, n): #говорим программе, чтобы рассматривались каждый последующий элемент массива, чтобы далее сравнить его с предыдущим
        for j in range(i,0,-1):#в подцикле говорим программе, чтобы она пробегала каждый предыдущий элемент массива, для их сравнения 
            if array[j] < array[j-1]:# ссравниваем элемент массива с предыдущими и если он меньше, то меняем их местами 
                array[j], array[j-1] = array[j-1], array[j]#меняем элементыместами
            else:#останавливаем подцикл, года доходим до начала массива
                break #останавливаем
    return array#вызываем отсортированный массив

def insertion_sort_po_ubiivaniu(array): #создаем функцию сортировки вставками по убыванию
    n = len(array) #Переменная n принимает значение размера массива
    for i in range(1, n): #говорим программе, чтобы рассматривались каждый последующий элемент массива, чтобы далее сравнить его с предыдущим
        for j in range(i,0,-1):#в подцикле говорим программе, чтобы она пробегала каждый предыдущий элемент массива, для их сравнения 
            if array[j] > array[j-1]:# сравниваем элемент массива с предыдущими и если он больше, то меняем их местами
                array[j], array[j-1] = array[j-1], array[j]#меняем местами элементы 
            else:#останавливаем подцикл, года доходим до начала массива
                break#останавливаем
    return array#вызываем отсортированный массив

array = [5,2,6,7,10,3,4]#можете написать любые другие цифры для сортировки
print(array)#
print(insertion_sort(array))#просим программу показать отсортированный массив по возрастанию
print(insertion_sort_po_ubiivaniu(array))#просим программу показать отсортированный массив по убыванию




